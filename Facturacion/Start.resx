<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnNuevoProducto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        g+ntrl2/ANiL1qhB2lZKAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnListarDePRoductos.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>